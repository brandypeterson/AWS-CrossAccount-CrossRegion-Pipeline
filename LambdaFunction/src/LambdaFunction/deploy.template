{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ExampleProject Lambda",
    "Parameters": {
        "BucketName": {
            "Type": "String"
        },
        "ObjectKey": {
            "Type": "String"
        }
    },
    "Resources": {
        "LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/ExampleProject-LambdaFunction",
                "RetentionInDays": 14
            }
        },
        "Function": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Lambda function for ExampleProject",
                "FunctionName": "ExampleProject-LambdaFunction",
                "Code": {
                    "S3Bucket": {
                        "Ref": "BucketName"
                    },
                    "S3Key": {
                        "Ref": "ObjectKey"
                    }
                },
                "Handler": "LambdaFunction::LambdaFunction.LambdaEntryPoint::FunctionHandlerAsync",
                "Runtime": "dotnetcore2.1",
                "MemorySize": 512,
                "Timeout": 15,
                "Role": {
                    "Fn::GetAtt": [
                        "Role",
                        "Arn"
                    ]
                }
            }
        },
        "Policy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "ManagedPolicyName": {
                    "Fn::Sub": "ExampleProject-LambdaFunction-${AWS::Region}"
                },
                "Description": "Policy for ExampleProject Lambda Function",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:*Item",
                                "dynamodb:Query",
                                "dynamodb:DescribeTable"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ExampleProject"
                                },
                                {
                                    "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ExampleProject/*"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ExampleProject-LambdaFunction"
                                },
                                {
                                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ExampleProject-LambdaFunction:*"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "ExampleProject-LambdaFunction-${AWS::Region}"
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "Policy"
                    }
                ]
            }
        },
        "APIGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Description": "API Gateway for ExampleProject-LambdaFunction",
                "EndpointConfiguration": {
                    "Types": [
                        "REGIONAL"
                    ]
                },
                "Name": "ExampleProject-LambdaFunction"
            }
        },
        "APIGatewayResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "APIGateway",
                        "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "APIGateway"
                },
                "PathPart": "{proxy+}"
            }
        },
        "APIGatewayProxyMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "ANY",
                "ResourceId": {
                    "Ref": "APIGatewayResource"
                },
                "RestApiId": {
                    "Ref": "APIGateway"
                },
                "AuthorizationType": "NONE",
                "RequestParameters": {
                    "method.request.path.proxy": true
                },
                "Integration": {
                    "RequestParameters": {
                        "integration.request.path.proxy": "method.request.path.proxy"
                    },
                    "IntegrationHttpMethod": "ANY",
                    "Type": "AWS_PROXY",
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200
                        }
                    ],
                    "Uri": {
                        "Fn::Sub": [
                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations",
                            {
                                "lambdaArn": {
                                    "Fn::GetAtt": [
                                        "Function",
                                        "Arn"
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        },
        "ApiGatewayInvoke": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "Function",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${APIGateway}/THE/*/*"
                }
            }
        },
        "APIGatewayDeployment": {
            "DependsOn": "APIGatewayProxyMethod",
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "APIGateway"
                },
                "StageName": "THE"
            }
        }
    }
}