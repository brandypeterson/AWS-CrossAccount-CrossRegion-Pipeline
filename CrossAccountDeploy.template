{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Continuous integration project for ExampleProject",
    "Parameters": {
        "BuildAccount": {
            "Description": "AWS AccountNumber for the Build Account",
            "Type": "Number"
        },
        "CMKARNs": {
            "Description": "Comma separated list of ARNs of the KMS CMKs created in the Build Account",
            "Type": "String"
        }
    },
    "Resources": {
        "CrossAccountCodePipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "CrossAccountCodePipeline",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Ref": "BuildAccount"
                                }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "CrossAccountCodePipelinePolicy"
                    }
                ]
            }
        },
        "CrossAccountCodePipelinePolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "ManagedPolicyName": "CrossAccountCodePipeline",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:*",
                                "s3:*",
                                "iam:PassRole"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": "kms:*",
                            "Resource": {
                                "Fn::Split": [
                                    ",",
                                    {
                                        "Ref": "CMKARNs"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "CrossAccountCloudFormationRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "CrossAccountCloudFormation",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudformation.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "CrossAccountCloudFormationPolicy"
                    },
                    "arn:aws:iam::aws:policy/AdministratorAccess"
                ]
            }
        },
        "CrossAccountCloudFormationPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Description": "Policy for Cross Account CloudFormation",
            "Properties": {
                "ManagedPolicyName": "CrossAccountCloudFormation",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:CreateTable",
                                "dynamodb:DeleteTable",
                                "dynamodb:DescribeTable",
                                "dynamodb:UpdateTable"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "route53:ChangeResourceRecordSets",
                                "route53:ListResourceRecordSets"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "route53:GetChange",
                                "route53:GetHostedZone"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "lambda:AddPermission",
                                "lambda:CreateFunction",
                                "lambda:DeleteFunction",
                                "lambda:GetFunction",
                                "lambda:GetFunctionConfiguration",
                                "lambda:ListTags",
                                "lambda:RemovePermission",
                                "lambda:TagResource",
                                "lambda:UntagResource",
                                "lambda:UpdateFunction",
                                "lambda:UpdateFunctionCode",
                                "lambda:UpdateFunctionConfiguration"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:DeleteLogGroup",
                                "logs:DeleteMetricFilter",
                                "logs:DeleteRetentionPolicy",
                                "logs:DeleteSubscriptionFilter",
                                "logs:DescribeLogGroups",
                                "logs:DescribeMetricFilters",
                                "logs:DescribeSubscriptionFilters",
                                "logs:FilterLogEvents",
                                "logs:ListTagsLogGroup",
                                "logs:PutMetricFilter",
                                "logs:PutRetentionPolicy",
                                "logs:PutSubscriptionFilter",
                                "logs:TagLogGroup",
                                "logs:UntagLogGroup"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "events:DeleteRule",
                                "events:DescribeRule",
                                "events:DisableRule",
                                "events:EnableRule",
                                "events:PutRule",
                                "events:RemoveTargets"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "cloudwatch:*Alarms*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "iam:AttachRolePolicy",
                                "iam:CreateRole",
                                "iam:CreateServiceLinkedRole",
                                "iam:DeleteRole",
                                "iam:DeleteServiceLinkedRole",
                                "iam:DetachRolePolicy",
                                "iam:GetRole",
                                "iam:ListAttachedRolePolicies",
                                "iam:ListPolicyVersions",
                                "iam:ListRoleTags",
                                "iam:TagRole",
                                "iam:UntagRole",
                                "iam:UpdateRole",
                                "iam:UpdateRoleDescription"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "iam:CreatePolicy",
                                "iam:DeletePolicy",
                                "iam:GetPolicy",
                                "iam:ListEntitiesForPolicy"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": "cloudformation:*",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                }
            }
        }
    },
    "Outputs": {
        "CrossAccountCloudFormationRoleArn": {
            "Description": "The ARN for the cloud formation role.",
            "Value": {
                "Fn::GetAtt": [
                    "CrossAccountCloudFormationRole",
                    "Arn"
                ]
            }
        },
        "CrossAccountCodePipelineRoleArn": {
            "Description": "The code pipeline cloud formation role.",
            "Value": {
                "Fn::GetAtt": [
                    "CrossAccountCodePipelineRole",
                    "Arn"
                ]
            }
        }
    }
}