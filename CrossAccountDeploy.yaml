AWSTemplateFormatVersion: '2010-09-09'
Description: Cross account deploy stack.
Parameters:
  BuildAccount:
    Description: AWS AccountNumber for the Build Account
    Type: Number
  BuildAccountKMSKeyArn:
    Description: The ARN of the KMS key used in the pipeline S3 bucket(s)
    Type: String
  PipelineBucket:
    Description: The bucket used for the pipelines.
    Type: String
  SecondaryPipelineBucket:
    Description: The secondary region's Pipeline bucket. This value is required if you are using a secondary region.
    Type: String
  SecondaryCrossAccountCMK:
    Description: The secondary region's Cross Account CMK. This value is required if you are using a secondary region.
    Type: String
Conditions:
  HasSecondaryRegion:
    Fn::Not:
      - Fn::Equals:
          - ''
          - !Ref SecondaryPipelineBucket
  IsBuildAccount:
    Fn::Equals:
      - !Ref BuildAccount
      - !Ref AWS::AccountId
Resources:
  # this policy grant general permissions to work with cross account stacks pipelines.
  # specifically, it grants access to the source pipeline S3 buckets, and the KMS keys used by those buckets, as well as all CloudFormation permissions
  CrossAccountBasePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for Cross Account CloudFormation
      ManagedPolicyName: CrossAccount-Base
      Path: /cross-account-service-role/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:ListBucket
              - s3:PutObject
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${PipelineBucket}
              - !Sub arn:aws:s3:::${PipelineBucket}/*
              - Fn::If:
                  - HasSecondaryRegion
                  - !Sub arn:aws:s3:::${SecondaryPipelineBucket}
                  - !Ref AWS::NoValue
              - Fn::If:
                  - HasSecondaryRegion
                  - !Sub arn:aws:s3:::${SecondaryPipelineBucket}/*
                  - !Ref AWS::NoValue
          - Action: cloudformation:*
            Effect: Allow
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource:
              - !Ref BuildAccountKMSKeyArn
              - Fn::If:
                  - HasSecondaryRegion
                  - !Ref SecondaryCrossAccountCMK
                  - !Ref AWS::NoValue
      Roles:
        - Fn::If:
            - IsBuildAccount
            - CrossAccount-UpdatePipeline # If we are in the build account we'll need this to allow updates of a pipeline
            - !Ref AWS::NoValue

  CrossAccountCloudFormationPolicyBuilderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
      Description: Role for creating permissions in cross account deployments. This role allows you to create policies with the permissions you need for each service. The role should be given a permission boundary to limit escalation of permissions.
      ManagedPolicyArns:
        - !Ref CrossAccountBasePolicy
      Path: /cross-account-service-role/
      RoleName: CrossAccount-CloudFormation-PolicyBuilder

  # this policy grants permissions to create and modify policy that will be used to deploy a service
  # each service, as a part of it's deployment process, should use this policy to grant to create the roles used for it's deployment
  # this allows the developers to control the permissions that they need while giving visibility to changes on a per service bases
  CrossAccountCloudFormationPolicyBuilderPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - iam:Get*
              - iam:List*
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - iam:AttachRolePolicy
              - iam:CreateInstanceProfile
              - iam:CreatePolicy
              - iam:CreatePolicyVersion
              - iam:CreateRole
              - iam:CreateServiceLinkedRole
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:DeleteRole
              - iam:DeleteServiceLinkedRole
              - iam:DetachRolePolicy
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:GetRole
              - iam:ListAttachedRolePolicies
              - iam:ListEntitiesForPolicy
              - iam:ListPolicies
              - iam:ListPolicyVersions
              - iam:ListRoleTags
              - iam:ListRoles
              - iam:SetDefaultPolicyVersion
              - iam:TagRole
              - iam:UntagRole
              - iam:UpdateRole
              - iam:UpdateRoleDescription
            Effect: Allow
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/cross-account-service-role/*
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/cross-account-service-role/*
      ManagedPolicyName: CrossAccount-CloudFormation-PolicyBuilder
      Roles:
        - !Ref CrossAccountCloudFormationPolicyBuilderRole

  CrossAccountCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS: !Ref BuildAccount
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: codepipeline.amazonaws.com
      Description: This role is used for the cross account code pipelines. This role should be used for the pipeline itself. It has permissions to work with the artifact buckets, perform CodePipeline tasks (add as needed), as well as assume role to other cross account service roles.
      ManagedPolicyArns:
        - !Ref CrossAccountBasePolicy
      Path: /cross-account-service-role/
      RoleName: CrossAccount-CodePipeline

  # this policy grants permissions to for code pipeline to be able to perform actions initiated by CodePipeline, including the ability to assume and pass roles for deployment
  # if you need to peform something in CodePipeline that is not in this list it will need to be updated
  CrossAccountCodePipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - codepipeline:*
              - iam:ListRoles
              - cloudformation:Describe*
              - cloudFormation:List*
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
            Resource: '*'
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/cross-account-service-role/*
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/cross-account-service-role/*
      ManagedPolicyName: CrossAccount-CodePipeline
      Roles:
        - !Ref CrossAccountCodePipelineRole

Outputs:
  CrossAccountCloudFormationPolicyBuilderRoleArn:
    Description: The ARN for the cloud formation policy builder role.
    Value: !GetAtt CrossAccountCloudFormationPolicyBuilderRole.Arn
  CrossAccountCodePipelineRoleArn:
    Description: The code pipeline cloud formation role.
    Value: !GetAtt CrossAccountCodePipelineRole.Arn
